relations {
  root {
    input {
      fetch {
        input {
          sort {
            input {
              aggregate {
                input {
                  filter {
                    input {
                      filter {
                        input {
                          project {
                            common {
                              emit {
                                output_mapping: 0
                              }
                            }
                            input {
                              project {
                                common {
                                  emit {
                                    output_mapping: 0
                                  }
                                }
                                input {
                                  project {
                                    common {
                                      emit {
                                        output_mapping: 0
                                      }
                                    }
                                    input {
                                      read {
                                        local_files {
                                          items {
                                            uri_file: "/Users/davids/Desktop/artists.csv"
                                          }
                                        }
                                      }
                                    }
                                    expressions {
                                      scalar_function {
                                        function_reference: 9999
                                        arguments {
                                          value {
                                            selection {
                                            }
                                          }
                                        }
                                        arguments {
                                          value {
                                            literal {
                                              string: "; "
                                            }
                                          }
                                        }
                                        arguments {
                                          value {
                                            literal {
                                              i32: -1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  cast {
                                    input {
                                      selection {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              cast {
                                input {
                                  selection {
                                  }
                                }
                              }
                            }
                          }
                        }
                        condition {
                          scalar_function {
                            function_reference: 9999
                            arguments {
                              value {
                                selection {
                                }
                              }
                            }
                            arguments {
                              value {
                                literal {
                                  boolean: false
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    condition {
                      scalar_function {
                        function_reference: 9999
                        arguments {
                          value {
                            selection {
                            }
                          }
                        }
                        arguments {
                          value {
                            literal {
                              string: "pop"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                groupings {
                  grouping_expressions {
                    selection {
                    }
                  }
                }
                measures {
                  measure {
                  }
                }
              }
            }
            sorts {
              expr {
                selection {
                }
              }
              direction: SORT_DIRECTION_DESC_NULLS_LAST
            }
          }
        }
        count: 10
      }
    }
  }
}
